
package barrowscounter;

/* Barrows Counter is an applet that helps with calculating points needed
 * in Old School Runescape Barrows Brothers reward chest for maximum loot.
 * @author iipa
 */
public class barrowsCounter extends javax.swing.JFrame {
    
    int pointsCollected = 0;
    
    barrowsCounter() {
        initComponents();
    }

    /**
     * Method automatically generated by NetBeans Form Designer.
     * Initializes graphic UI components.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        points = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        progress = new javax.swing.JProgressBar();
        bloodworm = new javax.swing.JButton();
        skeleton = new javax.swing.JButton();
        spider = new javax.swing.JButton();
        rat = new javax.swing.JButton();
        giantRat = new javax.swing.JButton();
        giantSpider = new javax.swing.JButton();
        pointsRemaining = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        ahrim = new javax.swing.JCheckBox();
        dharok = new javax.swing.JCheckBox();
        guthan = new javax.swing.JCheckBox();
        karil = new javax.swing.JCheckBox();
        torag = new javax.swing.JCheckBox();
        verac = new javax.swing.JCheckBox();
        brothers = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jLabel1.setText("Points:");

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reset(evt);
            }
        });

        points.setText("0");

        progress.setMaximum(1012);

        bloodworm.setText("Bloodworm");
        bloodworm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bloodwormActionPerformed(evt);
            }
        });

        skeleton.setText("Skeleton *");
        skeleton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skeletonAction(evt);
            }
        });

        spider.setText("Spider");
        spider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spiderAction(evt);
            }
        });

        rat.setText("Rat *");
        rat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ratAction(evt);
            }
        });

        giantRat.setText("Giant Rat *");
        giantRat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giantRatAction(evt);
            }
        });

        giantSpider.setText("Giant Spider");
        giantSpider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giantSpiderAction(evt);
            }
        });

        pointsRemaining.setText("1012 points to maximum loot");

        ahrim.setText("Ahrim the Blighted");
        ahrim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brotherChecked(evt);
            }
        });

        dharok.setText("Dharok the Wretched");
        dharok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brotherChecked(evt);
            }
        });

        guthan.setText("Guthan the Infested");
        guthan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brotherChecked(evt);
            }
        });

        karil.setText("Karil the Tainted");
        karil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brotherChecked(evt);
            }
        });

        torag.setText("Torag the Corrupted");
        torag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brotherChecked(evt);
            }
        });

        verac.setText("Verac the Defiled");
        verac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brotherChecked(evt);
            }
        });

        brothers.setText("Brothers");
        brothers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAllBrothers(evt);
            }
        });

        jLabel2.setText("* Bones to Peaches");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/barrowscounter/Barrows_brothers.png"))); // NOI18N
        jLabel3.setText("Barrows Counter");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator5)
                        .addContainerGap())))
            .addComponent(progress, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator3)
            .addComponent(jSeparator1)
            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pointsRemaining)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(points)
                        .addGap(201, 201, 201)
                        .addComponent(reset)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(guthan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ahrim, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dharok, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(karil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(torag, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(verac, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(brothers, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(bloodworm, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(rat, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(skeleton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(giantRat, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spider, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(giantSpider, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(points))
                    .addComponent(reset))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pointsRemaining)
                .addGap(18, 18, 18)
                .addComponent(progress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(brothers)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ahrim)
                    .addComponent(karil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dharok)
                    .addComponent(torag))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guthan)
                    .addComponent(verac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bloodworm)
                    .addComponent(spider)
                    .addComponent(rat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(giantRat)
                    .addComponent(giantSpider)
                    .addComponent(skeleton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bloodwormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bloodwormActionPerformed
        pointsCollected = pointsCollected + 52;
        updatePoints();
    }//GEN-LAST:event_bloodwormActionPerformed

    private void checkAllBrothers(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAllBrothers
        
        if(!ahrim.isSelected()) {
            ahrim.setSelected(true);
            changeBrotherPoints(ahrim);
        }
        
        if(!karil.isSelected()) {
            karil.setSelected(true);
            changeBrotherPoints(karil);
        }
        
        if(!dharok.isSelected()) {
            dharok.setSelected(true);
            changeBrotherPoints(dharok);
        }
        
        if(!guthan.isSelected()) {
            guthan.setSelected(true);
            changeBrotherPoints(guthan);
        }
        
        if(!torag.isSelected()) {
            torag.setSelected(true);
            changeBrotherPoints(torag);
        }
        
        if(!verac.isSelected()) {
            verac.setSelected(true);
            changeBrotherPoints(verac);
        }
    }//GEN-LAST:event_checkAllBrothers

    private void skeletonAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skeletonAction
        pointsCollected = pointsCollected + 77;
        updatePoints();
    }//GEN-LAST:event_skeletonAction

    private void ratAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ratAction
        pointsCollected = pointsCollected + 43;
        updatePoints();
    }//GEN-LAST:event_ratAction

    private void giantRatAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giantRatAction
        pointsCollected = pointsCollected + 76;
        updatePoints();
    }//GEN-LAST:event_giantRatAction

    private void spiderAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spiderAction
        pointsCollected = pointsCollected + 56;
        updatePoints();
    }//GEN-LAST:event_spiderAction

    private void giantSpiderAction(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giantSpiderAction
        pointsCollected = pointsCollected + 79;
        updatePoints();
    }//GEN-LAST:event_giantSpiderAction

    private void reset(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reset
        pointsCollected = 0;
        ahrim.setSelected(false);
        karil.setSelected(false);
        dharok.setSelected(false);
        guthan.setSelected(false);
        torag.setSelected(false);
        verac.setSelected(false);
        updatePoints();
    }//GEN-LAST:event_reset

    private void brotherChecked(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brotherChecked
        //System.out.println(evt.getSource());
        if(evt.getSource().equals(ahrim)) {
            changeBrotherPoints(ahrim);
        } else if(evt.getSource().equals(karil)) {
            changeBrotherPoints(karil);
        } else if(evt.getSource().equals(dharok)) {
            changeBrotherPoints(dharok);
        } else if(evt.getSource().equals(guthan)) {
            changeBrotherPoints(guthan);
        } else if(evt.getSource().equals(torag)) {
            changeBrotherPoints(torag);
        } else if(evt.getSource().equals(verac)) {
            changeBrotherPoints(verac);
        }
        
    }//GEN-LAST:event_brotherChecked

    private void changeBrotherPoints(javax.swing.JCheckBox brother) {
        if (brother.equals(ahrim) || brother.equals(karil)) {
            if(brother.isSelected()) {
                pointsCollected = pointsCollected + 98;
                updatePoints();
            } else {
                pointsCollected = pointsCollected - 98;
                updatePoints();
            }
        } else {
            System.out.println("melee");
            if(brother.isSelected()) {
                pointsCollected = pointsCollected + 115;
                updatePoints();
            } else {
                pointsCollected = pointsCollected - 115;
                updatePoints();
            }
        }
    }
    
    private void updatePoints() {
        points.setText("" + pointsCollected);
        if(1012 - pointsCollected > 0 ) {
            pointsRemaining.setText((1012 - pointsCollected) + " points to maximum loot");
            progress.setValue(pointsCollected);
        } else {
            pointsRemaining.setText("0 points to maximum loot");
            progress.setValue(1012);
        }
        
        if(ahrim.isSelected() || karil.isSelected() || dharok.isSelected() || guthan.isSelected() || torag.isSelected() || verac.isSelected()) {
            int bwLeft = (int) Math.ceil((1012 - pointsCollected) / 52.0);
            int skLeft = (int) Math.ceil((1012 - pointsCollected) / 77.0);
            int ratLeft = (int) Math.ceil((1012 - pointsCollected) / 43.0);
            int grLeft = (int) Math.ceil((1012 - pointsCollected) / 76.0);
            int spLeft = (int) Math.ceil((1012 - pointsCollected) / 56.0);
            int gsLeft = (int) Math.ceil((1012 - pointsCollected) / 79.0);
            
            if(bwLeft < 0) {
                bwLeft = 0;
            }
            if(skLeft < 0) {
                skLeft = 0;
            }
            if(ratLeft < 0) {
                ratLeft = 0;
            }
            if(grLeft < 0) {
                grLeft = 0;
            }
            if(spLeft < 0) {
                spLeft = 0;
            }
            if(gsLeft < 0) {
                gsLeft = 0;
            }
            
            bloodworm.setText("Bloodworm (" + bwLeft + ")");
            skeleton.setText("Skeleton * (" + skLeft + ")");
            rat.setText("Rat * (" + ratLeft + ")");
            giantRat.setText("Giant Rat * (" + grLeft + ")");
            spider.setText("Spider (" + spLeft + ")");
            giantSpider.setText("Giant Spider (" + gsLeft + ")");
        }
        
        if(!ahrim.isSelected() && !karil.isSelected() && !dharok.isSelected() && !guthan.isSelected() && !torag.isSelected() && !verac.isSelected()) {
            bloodworm.setText("Bloodworm");
            skeleton.setText("Skeleton *");
            rat.setText("Rat *");
            giantRat.setText("Giant Rat *");
            spider.setText("Spider");
            giantSpider.setText("Giant Spider");
        }
    }
    
    
    public static void main(String args[]) {
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new barrowsCounter().setVisible(true);
            }
        });
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ahrim;
    private javax.swing.JButton bloodworm;
    private javax.swing.JButton brothers;
    private javax.swing.JCheckBox dharok;
    private javax.swing.JButton giantRat;
    private javax.swing.JButton giantSpider;
    private javax.swing.JCheckBox guthan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JCheckBox karil;
    private javax.swing.JLabel points;
    private javax.swing.JLabel pointsRemaining;
    private javax.swing.JProgressBar progress;
    private javax.swing.JButton rat;
    private javax.swing.JButton reset;
    private javax.swing.JButton skeleton;
    private javax.swing.JButton spider;
    private javax.swing.JCheckBox torag;
    private javax.swing.JCheckBox verac;
    // End of variables declaration//GEN-END:variables
}
